@billing @bicker @annoy
Feature: I love it # features/balabala.feature:2
  A description with
  multiple
  lines
  Background:   # features/balabala.feature:7

  @Quick @full @annoy
  Scenario: Some determinable business situation  # features/balabala.feature:13
    Given a global administrator named "Greg"     # features/steps/steps.py:4
    * a blog named "Greg's anti-tax rants"        # features/steps/steps.py:9
    * a customer named "Wilson"                   # features/steps/steps.py:14
    Given the following people exist              # features/steps/steps.py:19
      | name | email          | phone |
      | Aila | aila@email.com | 123   |
      | Joe  | joe@email.com  | 234   |
    And some precondition 1                       # features/steps/steps.py:25
    When some action by the actor                 # features/steps/steps.py:30
    And some other action                         # features/steps/steps.py:35
    Then some testable outcome is achieved        # features/steps/steps.py:40
      Traceback (most recent call last):
        File "c:\users\chenhaok.corpdom\appdata\local\programs\python\python39\lib\site-packages\behave\model.py", line 1329, in run
          match.run(runner.context)
        File "c:\users\chenhaok.corpdom\appdata\local\programs\python\python39\lib\site-packages\behave\matchers.py", line 98, in run
          self.func(context, *args, **kwargs)
        File "features\steps\steps.py", line 43, in step_impl
          assert(1==0)
      AssertionError

    And something else we can check happens too   # None

@billing @bicker @annoy
Feature: Some terse yet descriptive text of what is desired like bla bla # features/dealer.feature:2
  A description with
  multiple
  lines
  Background:   # features/dealer.feature:7

  @Quick @full @annoy
  Scenario: Some determinable business situation  # features/dealer.feature:13
    Given a global administrator named "Greg"     # features/steps/steps.py:4
    * a blog named "Greg's anti-tax rants"        # features/steps/steps.py:9
    * a customer named "Wilson"                   # features/steps/steps.py:14
    Given the following people exist              # features/steps/steps.py:19
      | name | email          | phone |
      | Aila | aila@email.com | 123   |
      | Joe  | joe@email.com  | 234   |
    And some precondition 1                       # features/steps/steps.py:25
    When some action by the actor                 # features/steps/steps.py:30
    And some other action                         # features/steps/steps.py:35
    Then some testable outcome is achieved        # features/steps/steps.py:40
      Traceback (most recent call last):
        File "c:\users\chenhaok.corpdom\appdata\local\programs\python\python39\lib\site-packages\behave\model.py", line 1329, in run
          match.run(runner.context)
        File "c:\users\chenhaok.corpdom\appdata\local\programs\python\python39\lib\site-packages\behave\matchers.py", line 98, in run
          self.func(context, *args, **kwargs)
        File "features\steps\steps.py", line 43, in step_impl
          assert(1==0)
      AssertionError

    And something else we can check happens too   # None

  @Quick @nightly
  Scenario: Some another scenario 2             # features/dealer.feature:25
    Given a global administrator named "Greg"   # features/steps/steps.py:4
    * a blog named "Greg's anti-tax rants"      # features/steps/steps.py:9
    * a customer named "Wilson"                 # features/steps/steps.py:14
    Given some precondition                     # features/steps/steps.py:57
    And some other precondition with doc string # None
      """
      this is comment
      """
    When some action by the actor               # None
    And yet another action                      # None
    Then some testable outcome is achieved      # None
    * something else we can check happens too   # None
    But I don't see something else              # None

  Scenario Outline: feeding a cow cow1 yum yum yum -- @1.1   # features/dealer.feature:48
    Given a global administrator named "Greg"                # features/steps/steps.py:4
    * a blog named "Greg's anti-tax rants"                   # features/steps/steps.py:9
    * a customer named "Wilson"                              # features/steps/steps.py:14
    Given the cow weighs 450 kg                              # features/steps/steps.py:83
    When we calculate the feeding requirements               # features/steps/steps.py:89
    Then the energy should be 26500 MJ                       # features/steps/steps.py:94

  Scenario Outline: feeding a cow cow2 yum yum yum -- @1.2   # features/dealer.feature:49
    Given a global administrator named "Greg"                # features/steps/steps.py:4
    * a blog named "Greg's anti-tax rants"                   # features/steps/steps.py:9
    * a customer named "Wilson"                              # features/steps/steps.py:14
    Given the cow weighs 500 kg                              # features/steps/steps.py:83
    When we calculate the feeding requirements               # features/steps/steps.py:89
    Then the energy should be 29500 MJ                       # features/steps/steps.py:94

